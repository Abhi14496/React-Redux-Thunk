{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux saga\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchToDoList),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(loadusersuccess),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(rootSaga);import{call,put,takeEvery}from'redux-saga/effects';import{LOAD_USERS_SUCCESS,RENDER_USERS_SUCCESS}from'./index';// export function* fetch() {\n// const endpoint = '/details';\n//   const response = yield call(fetch, endpoint);\n//   const data = yield response.json();\n//   yield put({ type:LOAD_USERS_LOADING, user: data });\n// }\n//   export function* fetch() {\n//     try {\n//       yield put({type:LOAD_USERS_LOADING});\n//       const data = yield call(() => {\n//         return fetch('/details')\n//                 .then(res => res.json())\n//         }\n//       );\n//       yield put({ type: LOAD_USERS_SUCCESS, user:data });\n//     } catch (error) {\n//       yield put({ type: LOAD_USERS_ERROR ,error });\n//     }\n//   }\n//  export  default function* userinfo() {\n//   yield takeEvery(LOAD_USERS_SUCCESS, fetch);\n//  }\nexport function fetchToDoList(){var endpoint,response,data;return _regeneratorRuntime.wrap(function fetchToDoList$(_context){while(1){switch(_context.prev=_context.next){case 0:endpoint='/details';_context.next=3;return call(fetch,endpoint);case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;_context.next=9;return put({type:RENDER_TODO_LIST,user:data});case 9:case\"end\":return _context.stop();}}},_marked);}export function loadusersuccess(){return _regeneratorRuntime.wrap(function loadusersuccess$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(LOAD_USERS_SUCCESS,fetchToDoList);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default function rootSaga(){return _regeneratorRuntime.wrap(function rootSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([loadusersuccess()]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/Redux saga/src/action/store.js"],"names":["fetchToDoList","loadusersuccess","rootSaga","call","put","takeEvery","LOAD_USERS_SUCCESS","RENDER_USERS_SUCCESS","endpoint","fetch","response","json","data","type","RENDER_TODO_LIST","user","all"],"mappings":"6MA2BiBA,a,iDAOAC,e,iDAIQC,Q,EAtCzB,OAAUC,IAAV,CAAgBC,GAAhB,CAAqBC,SAArB,KAAsC,oBAAtC,CACA,OAASC,kBAAT,CAA4BC,oBAA5B,KAAuD,SAAvD,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAO,SAAUP,CAAAA,aAAV,oJACCQ,QADD,CACY,UADZ,iBAEY,MAAML,CAAAA,IAAI,CAACM,KAAD,CAAQD,QAAR,CAAV,CAFZ,OAECE,QAFD,+BAGQ,MAAMA,CAAAA,QAAQ,CAACC,IAAT,EAAN,CAHR,OAGCC,IAHD,+BAIL,MAAMR,CAAAA,GAAG,CAAC,CAAES,IAAI,CAAEC,gBAAR,CAA0BC,IAAI,CAAEH,IAAhC,CAAD,CAAT,CAJK,sDAOP,MAAO,SAAUX,CAAAA,eAAV,+IACL,MAAMI,CAAAA,SAAS,CAACC,kBAAD,CAAqBN,aAArB,CAAf,CADK,wDAIP,cAAe,SAAUE,CAAAA,QAAV,wIACb,MAAMc,CAAAA,GAAG,CAAC,CAACf,eAAe,EAAhB,CAAD,CAAT,CADa","sourcesContent":["import {  call, put, takeEvery } from 'redux-saga/effects';\r\nimport { LOAD_USERS_SUCCESS,RENDER_USERS_SUCCESS} from './index';\r\n\r\n// export function* fetch() {\r\n// const endpoint = '/details';\r\n//   const response = yield call(fetch, endpoint);\r\n//   const data = yield response.json();\r\n//   yield put({ type:LOAD_USERS_LOADING, user: data });\r\n// }\r\n//   export function* fetch() {\r\n//     try {\r\n//       yield put({type:LOAD_USERS_LOADING});\r\n//       const data = yield call(() => {\r\n//         return fetch('/details')\r\n//                 .then(res => res.json())\r\n//         }\r\n//       );\r\n//       yield put({ type: LOAD_USERS_SUCCESS, user:data });\r\n//     } catch (error) {\r\n//       yield put({ type: LOAD_USERS_ERROR ,error });\r\n//     }\r\n//   }\r\n//  export  default function* userinfo() {\r\n//   yield takeEvery(LOAD_USERS_SUCCESS, fetch);\r\n//  }\r\n\r\n\r\nexport function* fetchToDoList() {\r\n  const endpoint = '/details';\r\n  const response = yield call(fetch, endpoint);\r\n  const data = yield response.json();\r\n  yield put({ type: RENDER_TODO_LIST, user: data });\r\n}\r\n\r\nexport function* loadusersuccess() {\r\n  yield takeEvery(LOAD_USERS_SUCCESS, fetchToDoList);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([loadusersuccess()]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}