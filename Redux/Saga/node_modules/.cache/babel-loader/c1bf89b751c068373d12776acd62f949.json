{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux saga\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetch),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(loadusersuccess),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(rootSaga);import{all,call,put,takeEvery}from'redux-saga/effects';import{LOAD_USERS_SUCCESS,LOAD_USERS_LOADING}from'./index';export function fetch(){var response,data;return _regeneratorRuntime.wrap(function fetch$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return call(fetch,endpoint);case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;_context.next=8;return put({type:LOAD_USERS_LOADING,user:data});case 8:case\"end\":return _context.stop();}}},_marked);}export function loadusersuccess(){return _regeneratorRuntime.wrap(function loadusersuccess$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(LOAD_USERS_SUCCESS,fetch);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default function rootSaga(){return _regeneratorRuntime.wrap(function rootSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([loadusersuccess()]);case 2:case\"end\":return _context3.stop();}}},_marked3);}// function* fetchDogAsync() {\n//   try {\n//     yield put(requestDog());\n//     const data = yield call(() => {\n//       return fetch('https://dog.ceo/api/breeds/image/random')\n//               .then(res => res.json())\n//       }\n//     );\n//     yield put(requestDogSuccess(data));\n//   } catch (error) {\n//     yield put(requestDogError());\n//   }\n// }","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/Redux saga/src/action/store.js"],"names":["fetch","loadusersuccess","rootSaga","all","call","put","takeEvery","LOAD_USERS_SUCCESS","LOAD_USERS_LOADING","endpoint","response","json","data","type","user"],"mappings":"6MAGiBA,K,iDAOAC,e,iDAIQC,Q,EAdzB,OAASC,GAAT,CAAcC,IAAd,CAAoBC,GAApB,CAAyBC,SAAzB,KAA0C,oBAA1C,CACA,OAASC,kBAAT,CAA6BC,kBAA7B,KAAuD,SAAvD,CAEA,MAAO,SAAUR,CAAAA,KAAV,mJAEY,MAAMI,CAAAA,IAAI,CAACJ,KAAD,CAAQS,QAAR,CAAV,CAFZ,OAECC,QAFD,+BAGQ,MAAMA,CAAAA,QAAQ,CAACC,IAAT,EAAN,CAHR,OAGCC,IAHD,+BAIL,MAAMP,CAAAA,GAAG,CAAC,CAAEQ,IAAI,CAACL,kBAAP,CAA2BM,IAAI,CAAEF,IAAjC,CAAD,CAAT,CAJK,sDAOP,MAAO,SAAUX,CAAAA,eAAV,+IACL,MAAMK,CAAAA,SAAS,CAACC,kBAAD,CAAqBP,KAArB,CAAf,CADK,wDAIP,cAAe,SAAUE,CAAAA,QAAV,wIACb,MAAMC,CAAAA,GAAG,CAAC,CAACF,eAAe,EAAhB,CAAD,CAAT,CADa,wDAKf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { LOAD_USERS_SUCCESS, LOAD_USERS_LOADING } from './index';\r\n\r\nexport function* fetch() {\r\n  //const endpoint = '/details';\r\n  const response = yield call(fetch, endpoint);\r\n  const data = yield response.json();\r\n  yield put({ type:LOAD_USERS_LOADING, user: data });\r\n}\r\n\r\nexport function* loadusersuccess() {\r\n  yield takeEvery(LOAD_USERS_SUCCESS, fetch);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([loadusersuccess()]);\r\n}\r\n\r\n\r\n// function* fetchDogAsync() {\r\n//   try {\r\n//     yield put(requestDog());\r\n//     const data = yield call(() => {\r\n//       return fetch('https://dog.ceo/api/breeds/image/random')\r\n//               .then(res => res.json())\r\n//       }\r\n//     );\r\n//     yield put(requestDogSuccess(data));\r\n//   } catch (error) {\r\n//     yield put(requestDogError());\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}