{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux saga\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux saga\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchUser),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(usersSaga);import{put,takeLatest,takeEvery}from'redux-saga/effects';export var LOAD_USERS_LOADING='LOAD_USERS_LOADING';export var LOAD_USERS_SUCCESS='LOAD_USERS_SUCCESS';export var LOAD_USERS_ERROR='LOAD_USERS_ERROR';export var loadUsers=function loadUsers(){return{type:LOAD_USERS_LOADING};};function fetchAsync(_x){return _fetchAsync.apply(this,arguments);}function _fetchAsync(){_fetchAsync=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(func){var response;return _regeneratorRuntime.wrap(function _callee$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return func();case 2:response=_context3.sent;if(!response.ok){_context3.next=7;break;}_context3.next=6;return response.json();case 6:return _context3.abrupt(\"return\",_context3.sent);case 7:throw new Error(\"Unexpected error!!!\");case 8:case\"end\":return _context3.stop();}}},_callee);}));return _fetchAsync.apply(this,arguments);}function fetchUser(){var users;return _regeneratorRuntime.wrap(function fetchUser$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetchAsync('/details');case 3:users=_context.sent;_context.next=6;return put({type:LOAD_USERS_SUCCESS,data:users});case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);_context.next=12;return put({type:LOAD_USERS_ERROR,error:_context.t0.message});case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,8]]);}export function usersSaga(){return _regeneratorRuntime.wrap(function usersSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(LOAD_USERS_LOADING,fetchUser);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default usersSaga;","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/Redux saga/src/action/index.js"],"names":["fetchUser","usersSaga","put","takeLatest","takeEvery","LOAD_USERS_LOADING","LOAD_USERS_SUCCESS","LOAD_USERS_ERROR","loadUsers","type","fetchAsync","func","response","ok","json","Error","users","data","error","message"],"mappings":"uXAiBWA,S,iDAQOC,S,EAxBlB,OAASC,GAAT,CAAcC,UAAd,CAAyBC,SAAzB,KAA0C,oBAA1C,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,oBAA3B,CACP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,oBAA3B,CACP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CAEP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAO,CAC5BC,IAAI,CAAEJ,kBADsB,CAAP,EAAlB,C,QAGQK,CAAAA,U,0IAAf,iBAA0BC,IAA1B,yJAC2BA,CAAAA,IAAI,EAD/B,QACUC,QADV,oBAEQA,QAAQ,CAACC,EAFjB,iDAGqBD,CAAAA,QAAQ,CAACE,IAAT,EAHrB,qEAKU,IAAIC,CAAAA,KAAJ,CAAU,qBAAV,CALV,wD,6CAOC,QAAUf,CAAAA,SAAV,+JAEqB,MAAMU,CAAAA,UAAU,CAAC,UAAD,CAAhB,CAFrB,OAEaM,KAFb,+BAGO,MAAMd,CAAAA,GAAG,CAAC,CAACO,IAAI,CAAEH,kBAAP,CAA2BW,IAAI,CAAED,KAAjC,CAAD,CAAT,CAHP,uGAKO,MAAMd,CAAAA,GAAG,CAAC,CAACO,IAAI,CAAEF,gBAAP,CAAyBW,KAAK,CAAE,YAAEC,OAAlC,CAAD,CAAT,CALP,oEAQA,MAAO,SAAUlB,CAAAA,SAAV,yIACJ,MAAMG,CAAAA,SAAS,CAACC,kBAAD,CAAqBL,SAArB,CAAf,CADI,wDAGP,cAAeC,CAAAA,SAAf","sourcesContent":["\r\nimport { put, takeLatest,takeEvery } from 'redux-saga/effects'\r\n\r\nexport const LOAD_USERS_LOADING = 'LOAD_USERS_LOADING';\r\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\r\nexport const LOAD_USERS_ERROR = 'LOAD_USERS_ERROR';\r\n\r\nexport const loadUsers = () => ({\r\n    type: LOAD_USERS_LOADING \r\n});\r\nasync function fetchAsync(func) {\r\n    const response = await func();\r\n    if (response.ok) {\r\n        return await response.json();\r\n    }\r\n    throw new Error(\"Unexpected error!!!\");\r\n }\r\n function* fetchUser() {\r\n    try {\r\n        const users = yield fetchAsync('/details');\r\n        yield put({type: LOAD_USERS_SUCCESS, data: users});\r\n    } catch (e) {\r\n        yield put({type: LOAD_USERS_ERROR, error: e.message});\r\n    }\r\n }\r\n export function* usersSaga() {\r\n    yield takeEvery(LOAD_USERS_LOADING, fetchUser);\r\n}\r\n export default usersSaga;"]},"metadata":{},"sourceType":"module"}