{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux saga\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchToDoList),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(loadUsers),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(usersSaga);import{put,takeEvery,takeLatest}from'redux-saga/effects';//export const LOAD_USERS_LOADING = 'LOAD_USERS_LOADING';\nexport var LOAD_USERS_SUCCESS='LOAD_USERS_SUCCESS';export var LOAD_USERS_ERROR='LOAD_USERS_ERROR';// function* fetchUser() {\n//    try {\n//        const users = yield fetch('/details');\n//        yield put({type: LOAD_USERS_SUCCESS, users});\n//    } catch (e) {\n//        yield put({type: LOAD_USERS_ERROR, error: e.message});\n//    }\n// }\n// export function* usersSaga() {\n// yield takeEvery(LOAD_USERS_LOADING,fetchUser );\n// }\n// export default usersSaga;\nexport function fetchToDoList(){var endpoint,response,data;return _regeneratorRuntime.wrap(function fetchToDoList$(_context){while(1){switch(_context.prev=_context.next){case 0:endpoint='/details';_context.next=3;return call(fetch,endpoint);case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;_context.next=9;return put({type:LOAD_USERS_ERROR,data:data});case 9:case\"end\":return _context.stop();}}},_marked);}export function loadUsers(){return _regeneratorRuntime.wrap(function loadUsers$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(LOAD_USERS_SUCCESS,fetchToDoList);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default function usersSaga(){return _regeneratorRuntime.wrap(function usersSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([loadUsers()]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/Redux saga/src/action/index.js"],"names":["fetchToDoList","loadUsers","usersSaga","put","takeEvery","takeLatest","LOAD_USERS_SUCCESS","LOAD_USERS_ERROR","endpoint","call","fetch","response","json","data","type","all"],"mappings":"6MAwBiBA,a,iDAOCC,S,iDAISC,S,EAnC3B,OAASC,GAAT,CAAcC,SAAd,CAAyBC,UAAzB,KAA2C,oBAA3C,CAEA;AACA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,oBAA3B,CACP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAO,SAAUP,CAAAA,aAAV,oJACGQ,QADH,CACc,UADd,iBAEc,MAAMC,CAAAA,IAAI,CAACC,KAAD,CAAQF,QAAR,CAAV,CAFd,OAEGG,QAFH,+BAGU,MAAMA,CAAAA,QAAQ,CAACC,IAAT,EAAN,CAHV,OAGGC,IAHH,+BAIH,MAAMV,CAAAA,GAAG,CAAC,CAAEW,IAAI,CAAEP,gBAAR,CAA0BM,IAAI,CAAEA,IAAhC,CAAD,CAAT,CAJG,sDAOL,MAAO,SAASZ,CAAAA,SAAT,yIACL,MAAMG,CAAAA,SAAS,CAAEE,kBAAF,CAAsBN,aAAtB,CAAf,CADK,wDAIP,cAAe,SAAUE,CAAAA,SAAV,yIACb,MAAMa,CAAAA,GAAG,CAAC,CAACd,SAAS,EAAV,CAAD,CAAT,CADa","sourcesContent":["import { put, takeEvery, takeLatest } from 'redux-saga/effects'\r\n\r\n//export const LOAD_USERS_LOADING = 'LOAD_USERS_LOADING';\r\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\r\nexport const LOAD_USERS_ERROR = 'LOAD_USERS_ERROR';\r\n\r\n\r\n\r\n\r\n\r\n// function* fetchUser() {\r\n//    try {\r\n//        const users = yield fetch('/details');\r\n//        yield put({type: LOAD_USERS_SUCCESS, users});\r\n//    } catch (e) {\r\n//        yield put({type: LOAD_USERS_ERROR, error: e.message});\r\n//    }\r\n// }\r\n// export function* usersSaga() {\r\n// yield takeEvery(LOAD_USERS_LOADING,fetchUser );\r\n// }\r\n// export default usersSaga;\r\n\r\n\r\nexport function* fetchToDoList() {\r\n    const endpoint = '/details';\r\n    const response = yield call(fetch, endpoint);\r\n    const data = yield response.json();\r\n    yield put({ type: LOAD_USERS_ERROR, data: data });\r\n  }\r\n  \r\n  export function*loadUsers() {\r\n    yield takeEvery( LOAD_USERS_SUCCESS, fetchToDoList);\r\n  }\r\n  \r\n  export default function* usersSaga() {\r\n    yield all([loadUsers()]);\r\n  }"]},"metadata":{},"sourceType":"module"}