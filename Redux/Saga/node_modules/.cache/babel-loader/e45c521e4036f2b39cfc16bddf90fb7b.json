{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux saga\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetch),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(userinfo);import{all,call,put,takeEvery}from'redux-saga/effects';import{LOAD_USERS_SUCCESS,LOAD_USERS_LOADING,LOAD_USERS_ERROR}from'./index';// export function* fetch() {\n// const endpoint = '/details';\n//   const response = yield call(fetch, endpoint);\n//   const data = yield response.json();\n//   yield put({ type:LOAD_USERS_LOADING, user: data });\n// }\nexport function fetch(){var data;return _regeneratorRuntime.wrap(function fetch$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return put({type:LOAD_USERS_LOADING});case 3:_context.next=5;return call(function(){return fetch('/details').then(function(res){return res.json();});});case 5:data=_context.sent;_context.next=8;return put({type:LOAD_USERS_SUCCESS,user:data});case 8:_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);_context.next=14;return put({type:LOAD_USERS_ERROR,error:_context.t0});case 14:case\"end\":return _context.stop();}}},_marked,null,[[0,10]]);}export default function userinfo(){return _regeneratorRuntime.wrap(function userinfo$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(LOAD_USERS_SUCCESS,fetch);case 2:case\"end\":return _context2.stop();}}},_marked2);}// export function* fetchToDoList() {\n//   const endpoint = '/details';\n//   const response = yield call(fetch, endpoint);\n//   const data = yield response.json();\n//   yield put({ type:RENDER_USERS_SUCCESS, user: data });\n// }\n// export function* loadusersuccess() {\n//   yield takeEvery(LOAD_USERS_SUCCESS, fetchToDoList);\n// }\n// export default function* rootSaga() {\n//   yield all([loadusersuccess()]);\n// }","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/Redux saga/src/action/store.js"],"names":["fetch","userinfo","all","call","put","takeEvery","LOAD_USERS_SUCCESS","LOAD_USERS_LOADING","LOAD_USERS_ERROR","type","then","res","json","data","user","error"],"mappings":"6MASmBA,K,iDAaQC,Q,EAtB3B,OAASC,GAAT,CAAcC,IAAd,CAAoBC,GAApB,CAAyBC,SAAzB,KAA0C,oBAA1C,CACA,OAASC,kBAAT,CAA4BC,kBAA5B,CAA+CC,gBAA/C,KAAsE,SAAtE,CAEA;AACA;AACA;AACA;AACA;AACA;AACE,MAAO,SAAUR,CAAAA,KAAV,0JAEH,MAAMI,CAAAA,GAAG,CAAC,CAACK,IAAI,CAACF,kBAAN,CAAD,CAAT,CAFG,uBAGU,MAAMJ,CAAAA,IAAI,CAAC,UAAM,CAC5B,MAAOH,CAAAA,KAAK,CAAC,UAAD,CAAL,CACEU,IADF,CACO,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADV,CAAP,CAEC,CAHoB,CAAV,CAHV,OAGGC,IAHH,+BAQH,MAAMT,CAAAA,GAAG,CAAC,CAAEK,IAAI,CAAEH,kBAAR,CAA4BQ,IAAI,CAACD,IAAjC,CAAD,CAAT,CARG,yGAUH,MAAMT,CAAAA,GAAG,CAAC,CAAEK,IAAI,CAAED,gBAAR,CAA0BO,KAAK,YAA/B,CAAD,CAAT,CAVG,qEAaR,cAAgB,SAAUd,CAAAA,QAAV,wIACf,MAAMI,CAAAA,SAAS,CAACC,kBAAD,CAAqBN,KAArB,CAAf,CADe,wDAKjB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { LOAD_USERS_SUCCESS,LOAD_USERS_LOADING,LOAD_USERS_ERROR} from './index';\r\n\r\n// export function* fetch() {\r\n// const endpoint = '/details';\r\n//   const response = yield call(fetch, endpoint);\r\n//   const data = yield response.json();\r\n//   yield put({ type:LOAD_USERS_LOADING, user: data });\r\n// }\r\n  export function* fetch() {\r\n    try {\r\n      yield put({type:LOAD_USERS_LOADING});\r\n      const data = yield call(() => {\r\n        return fetch('/details')\r\n                .then(res => res.json())\r\n        }\r\n      );\r\n      yield put({ type: LOAD_USERS_SUCCESS, user:data });\r\n    } catch (error) {\r\n      yield put({ type: LOAD_USERS_ERROR ,error });\r\n    }\r\n  }\r\n export  default function* userinfo() {\r\n  yield takeEvery(LOAD_USERS_SUCCESS, fetch);\r\n }\r\n\r\n\r\n// export function* fetchToDoList() {\r\n//   const endpoint = '/details';\r\n//   const response = yield call(fetch, endpoint);\r\n//   const data = yield response.json();\r\n//   yield put({ type:RENDER_USERS_SUCCESS, user: data });\r\n// }\r\n\r\n// export function* loadusersuccess() {\r\n//   yield takeEvery(LOAD_USERS_SUCCESS, fetchToDoList);\r\n// }\r\n\r\n// export default function* rootSaga() {\r\n//   yield all([loadusersuccess()]);\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}