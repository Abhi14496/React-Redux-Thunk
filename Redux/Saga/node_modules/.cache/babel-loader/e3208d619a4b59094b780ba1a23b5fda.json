{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux saga\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";// const initialState = {\n//   data: [],\n//   error: ''\n// };\n// export default function reducer(state = initialState, action) {\n//   switch (action.type) {\n//       // case 'LOAD_USERS_LOADING': {\n//       //     return {\n//       //         ...state,\n//       //         loading: true,\n//       //         error:''\n//       //     };\n//       // }\n//       case 'LOAD_USERS_SUCCESS': \n//           return {\n//               ...state,\n//               data: action.data,\n//               }\n//       case 'LOAD_USERS_ERROR': \n//           return {\n//               ...state,\n//              error: action.error\n//           };\n//       default: {\n//           return state;\n//       }\n//   }\n// }\nvar reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'GET_NEWS':return _objectSpread(_objectSpread({},state),{},{loading:true});case'NEWS_RECEIVED':return _objectSpread(_objectSpread({},state),{},{news:action.users[0],loading:false});default:return state;}};export default reducer;","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/Redux saga/src/reducers/index.js"],"names":["reducer","state","action","type","loading","news","users"],"mappings":"mKACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,GAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACtC,OAAQA,MAAM,CAACC,IAAf,EACG,IAAK,UAAL,CACG,sCAAYF,KAAZ,MAAmBG,OAAO,CAAE,IAA5B,GACA,IAAK,eAAL,CACE,sCAAYH,KAAZ,MAAmBI,IAAI,CAAEH,MAAM,CAACI,KAAP,CAAa,CAAb,CAAzB,CAA0CF,OAAO,CAAE,KAAnD,GACL,QACG,MAAOH,CAAAA,KAAP,CANN,CAQD,CATD,CAUA,cAAeD,CAAAA,OAAf","sourcesContent":["\r\n// const initialState = {\r\n//   data: [],\r\n//   error: ''\r\n// };\r\n// export default function reducer(state = initialState, action) {\r\n//   switch (action.type) {\r\n//       // case 'LOAD_USERS_LOADING': {\r\n//       //     return {\r\n//       //         ...state,\r\n//       //         loading: true,\r\n//       //         error:''\r\n//       //     };\r\n//       // }\r\n//       case 'LOAD_USERS_SUCCESS': \r\n//           return {\r\n//               ...state,\r\n//               data: action.data,\r\n//               }\r\n      \r\n//       case 'LOAD_USERS_ERROR': \r\n//           return {\r\n//               ...state,\r\n//              error: action.error\r\n//           };\r\n      \r\n//       default: {\r\n//           return state;\r\n//       }\r\n//   }\r\n// }\r\n\r\nconst reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n     case 'GET_NEWS':\r\n        return { ...state, loading: true };\r\n        case 'NEWS_RECEIVED':\r\n          return { ...state, news: action.users[0], loading: false }   \r\n     default:\r\n        return state;\r\n   }\r\n};\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}