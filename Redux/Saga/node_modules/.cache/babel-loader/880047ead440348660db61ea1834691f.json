{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux saga\\\\Saga\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(watcherSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(workerSaga);import{takeEvery,call,put}from\"redux-saga/effects\";export default function watcherSaga(){return _regeneratorRuntime.wrap(function watcherSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(\"DATA_REQUESTED\",workerSaga);case 2:case\"end\":return _context.stop();}}},_marked);}function workerSaga(){var payload;return _regeneratorRuntime.wrap(function workerSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return call(getData);case 2:payload=_context2.sent;_context2.next=5;return put({type:\"DATA_LOADED\",payload:payload});case 5:case\"end\":return _context2.stop();}}},_marked2);}function getData(){return fetch(\"/details\").then(function(response){return response.json();});}","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/Redux saga/saga/src/action/index1.js"],"names":["watcherSaga","workerSaga","takeEvery","call","put","getData","payload","type","fetch","then","response","json"],"mappings":"mNAEyBA,W,iDAIfC,U,EANV,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,GAA1B,KAAqC,oBAArC,CAEA,cAAe,SAAUJ,CAAAA,WAAV,uIACb,MAAME,CAAAA,SAAS,CAAC,gBAAD,CAAmBD,UAAnB,CAAf,CADa,sDAIf,QAAUA,CAAAA,UAAV,sJACkB,MAAME,CAAAA,IAAI,CAACE,OAAD,CAAV,CADlB,OACQC,OADR,iCAEE,MAAMF,CAAAA,GAAG,CAAC,CAAEG,IAAI,CAAE,aAAR,CAAuBD,OAAO,CAAPA,OAAvB,CAAD,CAAT,CAFF,wDAKA,QAASD,CAAAA,OAAT,EAAmB,CACf,MAAOG,CAAAA,KAAK,CAAC,UAAD,CAAL,CAAkBC,IAAlB,CAAuB,SAAAC,QAAQ,QACpCA,CAAAA,QAAQ,CAACC,IAAT,EADoC,EAA/B,CAAP,CAGD","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\n\r\nexport default function* watcherSaga() {\r\n  yield takeEvery(\"DATA_REQUESTED\", workerSaga);\r\n}\r\n\r\nfunction* workerSaga() {\r\n  const payload = yield call(getData);\r\n  yield put({ type: \"DATA_LOADED\", payload });\r\n  \r\n}\r\nfunction getData() {\r\n    return fetch(\"/details\").then(response =>\r\n      response.json()\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}