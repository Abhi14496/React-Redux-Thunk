{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\production server with webpack redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";// const initialState = {\n//     articles: [],\n//     remoteArticles: []\n//   };\n//   function rootReducer(state = initialState, action) {\n//     if (action.type === \"DATA_LOADED\") {\n//       return Object.assign({}, state, {\n//         remoteArticles: state.remoteArticles.concat(action.payload)\n//       });\n//     }\n//     return state;\n//   }\n//   export default rootReducer;\n// import {FETCH_USERS} from '../Containers/Users';\n// const userReducer = (state = {}, {type, payload}) => {\n//     switch(type) {\n//         case FETCH_USERS :\n//         return payload\n//         default :\n//     return state\n// };\n// };\n// export default userReducer;\nvar intialState={num:0,data:null,error:\"\"};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:intialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"INCREMENT\":return _objectSpread(_objectSpread({},state),{},{num:state.num+1});case\"FetchData\":return _objectSpread(_objectSpread({},state),{},{data:action.data});case\"ERROR\":return _objectSpread(_objectSpread({},state),{},{error:action.msg});default:return state;}};export default reducer;","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/production server with webpack redux/src/reducers/index.js"],"names":["intialState","num","data","error","reducer","state","action","type","msg"],"mappings":"6LAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,GAAMA,CAAAA,WAAW,CAAG,CAClBC,GAAG,CAAE,CADa,CAElBC,IAAI,CAAE,IAFY,CAGlBC,KAAK,CAAE,EAHW,CAApB,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAiC,IAAhCC,CAAAA,KAAgC,2DAAxBL,WAAwB,IAAXM,CAAAA,MAAW,2CAE/C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,WAAL,CACI,sCAAYF,KAAZ,MAAmBJ,GAAG,CAAEI,KAAK,CAACJ,GAAN,CAAY,CAApC,GACJ,IAAK,WAAL,CACI,sCAAYI,KAAZ,MAAmBH,IAAI,CAAEI,MAAM,CAACJ,IAAhC,GACJ,IAAK,OAAL,CACI,sCAAYG,KAAZ,MAAmBF,KAAK,CAAEG,MAAM,CAACE,GAAjC,GACJ,QACI,MAAOH,CAAAA,KAAP,CARR,CAYK,CAdP,CAiBM,cAAeD,CAAAA,OAAf","sourcesContent":["// const initialState = {\r\n//     articles: [],\r\n//     remoteArticles: []\r\n//   };\r\n\r\n//   function rootReducer(state = initialState, action) {\r\n//     if (action.type === \"DATA_LOADED\") {\r\n//       return Object.assign({}, state, {\r\n//         remoteArticles: state.remoteArticles.concat(action.payload)\r\n//       });\r\n//     }\r\n//     return state;\r\n//   }\r\n  \r\n//   export default rootReducer;\r\n\r\n// import {FETCH_USERS} from '../Containers/Users';\r\n// const userReducer = (state = {}, {type, payload}) => {\r\n//     switch(type) {\r\n//         case FETCH_USERS :\r\n//         return payload\r\n//         default :\r\n//     return state\r\n// };\r\n// };\r\n// export default userReducer;\r\n\r\n\r\nconst intialState = {\r\n  num: 0,\r\n  data: null,\r\n  error: \"\"\r\n}\r\n\r\nconst reducer = (state = intialState, action) => {\r\n\r\n  switch (action.type) {\r\n      case \"INCREMENT\":\r\n          return { ...state, num: state.num + 1 }\r\n      case \"FetchData\":\r\n          return { ...state, data: action.data }\r\n      case \"ERROR\":\r\n          return { ...state, error: action.msg }\r\n      default:\r\n          return state\r\n\r\n        }\r\n\r\n      }\r\n      \r\n      \r\n      export default reducer"]},"metadata":{},"sourceType":"module"}