{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux saga\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";// const initialState = {\n//    data: [],\n//    loading: false,\n//    error: ''\n// };\n// export default function reducer(state = initialState, action) {\n//    switch (action.type) {\n//        case 'LOAD_USERS_LOADING': {\n//            return {\n//                ...state,\n//                loading: true,\n//                error:''\n//            };\n//        }\n//        case 'LOAD_USERS_SUCCESS': {\n//            return {\n//                ...state,\n//                data: action.data,\n//                loading: false\n//            }\n//        }\n//        case 'LOAD_USERS_ERROR': {\n//            return {\n//                ...state,\n//                loading: false,\n//                error: action.error\n//            };\n//        }\n//        default: {\n//            return state;\n//        }\n//    }\n// }\nexport default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{data:[],loading:false};var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};switch(action.type){case'RECORDS/FETCH':case'RECORDS/FETCH_FAILED':return _objectSpread(_objectSpread({},state),{},{loading:true,data:[]});case'RECORDS/SET':return _objectSpread(_objectSpread({},state),{},{loading:false,data:action.payload});default:return state;}});","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/Redux saga/src/reducers/index.js"],"names":["state","data","loading","action","type","payload"],"mappings":"mKACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,UAAqD,IAApDA,CAAAA,KAAoD,2DAA5C,CAACC,IAAI,CAAE,EAAP,CAAWC,OAAO,CAAE,KAApB,CAA4C,IAAhBC,CAAAA,MAAgB,2DAAP,EAAO,CAChE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,eAAL,CACA,IAAK,sBAAL,CACE,sCACOJ,KADP,MAEIE,OAAO,CAAE,IAFb,CAGID,IAAI,CAAE,EAHV,GAKF,IAAK,aAAL,CACE,sCACOD,KADP,MAEIE,OAAO,CAAE,KAFb,CAGID,IAAI,CAAEE,MAAM,CAACE,OAHjB,GAKF,QACE,MAAOL,CAAAA,KAAP,CAfJ,CAiBD,CAlBH","sourcesContent":["\r\n// const initialState = {\r\n//    data: [],\r\n//    loading: false,\r\n//    error: ''\r\n// };\r\n// export default function reducer(state = initialState, action) {\r\n//    switch (action.type) {\r\n//        case 'LOAD_USERS_LOADING': {\r\n//            return {\r\n//                ...state,\r\n//                loading: true,\r\n//                error:''\r\n//            };\r\n//        }\r\n//        case 'LOAD_USERS_SUCCESS': {\r\n//            return {\r\n//                ...state,\r\n//                data: action.data,\r\n//                loading: false\r\n//            }\r\n//        }\r\n//        case 'LOAD_USERS_ERROR': {\r\n//            return {\r\n//                ...state,\r\n//                loading: false,\r\n//                error: action.error\r\n//            };\r\n//        }\r\n//        default: {\r\n//            return state;\r\n//        }\r\n//    }\r\n// }\r\n\r\nexport default (state = {data: [], loading: false}, action = {}) => {\r\n    switch (action.type) {\r\n      case 'RECORDS/FETCH':\r\n      case 'RECORDS/FETCH_FAILED':\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            data: []\r\n        };\r\n      case 'RECORDS/SET':\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            data: action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}