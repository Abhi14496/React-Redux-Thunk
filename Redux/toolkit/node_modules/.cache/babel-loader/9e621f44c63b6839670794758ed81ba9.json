{"ast":null,"code":"// const initialState = {\n//     articles: [],\n//     remoteArticles: []\n//   };\nvar _require=require(\"../Containers/Users\"),fetchData=_require.fetchData;//   function rootReducer(state = initialState, action) {\n//     if (action.type === \"DATA_LOADED\") {\n//       return Object.assign({}, state, {\n//         remoteArticles: state.remoteArticles.concat(action.payload)\n//       });\n//     }\n//     return state;\n//   }\n//   export default rootReducer;\n// import {FETCH_USERS} from '../Containers/Users';\n// const userReducer = (state = {}, {type, payload}) => {\n//     switch(type) {\n//         case FETCH_USERS :\n//         return payload\n//         default :\n//     return state\n// };\n// };\n// export default userReducer;\n// const intialState = {\n//   num: 0,\n//   data: null,\n//   error: \"\"\n// }\n// const reducer = (state = intialState, action) => {\n//   switch (action.type) {\n//       case \"INCREMENT\":\n//           return { ...state, num: state.num + 1 }\n//       case \"FetchData\":\n//           return { ...state, data: action.data }\n//       case \"ERROR\":\n//           return { ...state, error: action.msg }\n//       default:\n//           return state\n//         }\n//       }\n//       export default reducer\nvar initialState={users:[]};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{initialState:initialState};var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case fetchData:return payload;default:return state;};};export default reducer;","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/production server with webpack redux/src/reducers/index.js"],"names":["require","fetchData","initialState","users","reducer","state","type","payload"],"mappings":"AAAA;AACA;AACA;AACA;aAEsBA,OAAO,CAAC,qBAAD,C,CAArBC,S,UAAAA,S,CAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA,GAAMC,CAAAA,YAAY,CAAC,CACjBC,KAAK,CAAC,EADW,CAAnB,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAA0C,IAAzCC,CAAAA,KAAyC,2DAAlC,CAACH,YAAY,CAAZA,YAAD,CAAkC,oDAAlBI,IAAkB,MAAlBA,IAAkB,CAAbC,OAAa,MAAbA,OAAa,CACxD,OAAOD,IAAP,EACE,IAAKL,CAAAA,SAAL,CACE,MAAOM,CAAAA,OAAP,CACA,QACE,MAAOF,CAAAA,KAAP,CAJN,CAKC,CACF,CAPD,CASA,cAAeD,CAAAA,OAAf","sourcesContent":["// const initialState = {\r\n//     articles: [],\r\n//     remoteArticles: []\r\n//   };\r\n\r\nconst { fetchData } = require(\"../Containers/Users\");\r\n\r\n//   function rootReducer(state = initialState, action) {\r\n//     if (action.type === \"DATA_LOADED\") {\r\n//       return Object.assign({}, state, {\r\n//         remoteArticles: state.remoteArticles.concat(action.payload)\r\n//       });\r\n//     }\r\n//     return state;\r\n//   }\r\n  \r\n//   export default rootReducer;\r\n\r\n// import {FETCH_USERS} from '../Containers/Users';\r\n// const userReducer = (state = {}, {type, payload}) => {\r\n//     switch(type) {\r\n//         case FETCH_USERS :\r\n//         return payload\r\n//         default :\r\n//     return state\r\n// };\r\n// };\r\n// export default userReducer;\r\n\r\n\r\n// const intialState = {\r\n//   num: 0,\r\n//   data: null,\r\n//   error: \"\"\r\n// }\r\n\r\n// const reducer = (state = intialState, action) => {\r\n\r\n//   switch (action.type) {\r\n//       case \"INCREMENT\":\r\n//           return { ...state, num: state.num + 1 }\r\n//       case \"FetchData\":\r\n//           return { ...state, data: action.data }\r\n//       case \"ERROR\":\r\n//           return { ...state, error: action.msg }\r\n//       default:\r\n//           return state\r\n\r\n//         }\r\n\r\n//       }\r\n      \r\n      \r\n//       export default reducer\r\nconst initialState={\r\n  users:[]\r\n}\r\nconst reducer = (state ={initialState},{type,payload}) => {\r\n  switch(type){\r\n    case fetchData:\r\n      return payload\r\n      default:\r\n        return state\r\n  };\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}