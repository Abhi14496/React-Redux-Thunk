{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux toolkit  1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\Redux toolkit  1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{createSlice}from'@reduxjs/toolkit';export var initialState={loading:false,hasErrors:false,user:[]};// A slice for recipes with our three reducers\nvar userSlice=createSlice({name:'user',initialState:initialState,reducers:{getUser:function getUser(state){state.loading=true;},getUserSuccess:function getUserSuccess(state,_ref){var payload=_ref.payload;state.user=payload;state.loading=false;state.hasErrors=false;},getUserFailure:function getUserFailure(state){state.loading=false;state.hasErrors=true;}}});// Three actions generated from the slice\nvar _userSlice$actions=userSlice.actions,getUser=_userSlice$actions.getUser,getUserSuccess=_userSlice$actions.getUserSuccess,getUserFailure=_userSlice$actions.getUserFailure;// A selector\nexport{getUser,getUserSuccess,getUserFailure};export var userSelector=function userSelector(state){return state.user;};// The reducer\nexport default userSlice.reducer;// Asynchronous thunk action\nexport function fetchUser(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(getUser());_context.prev=1;_context.next=4;return fetch('/details');case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;dispatch(getUserSuccess(data));_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);dispatch(getUserFailure());case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function(_x){return _ref2.apply(this,arguments);};}();}","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/Redux toolkit  1/src/reducers/index.js"],"names":["createSlice","initialState","loading","hasErrors","user","userSlice","name","reducers","getUser","state","getUserSuccess","payload","getUserFailure","actions","userSelector","reducer","fetchUser","dispatch","fetch","response","json","data"],"mappings":"iVAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,CAC1BC,OAAO,CAAE,KADiB,CAE1BC,SAAS,CAAE,KAFe,CAG1BC,IAAI,CAAE,EAHoB,CAArB,CAMP;AACA,GAAMC,CAAAA,SAAS,CAAGL,WAAW,CAAC,CAC5BM,IAAI,CAAE,MADsB,CAE5BL,YAAY,CAAZA,YAF4B,CAG5BM,QAAQ,CAAE,CACRC,OAAO,CAAE,iBAAAC,KAAK,CAAI,CAChBA,KAAK,CAACP,OAAN,CAAgB,IAAhB,CACD,CAHO,CAIRQ,cAAc,CAAE,wBAACD,KAAD,MAAwB,IAAdE,CAAAA,OAAc,MAAdA,OAAc,CACtCF,KAAK,CAACL,IAAN,CAAaO,OAAb,CACAF,KAAK,CAACP,OAAN,CAAgB,KAAhB,CACAO,KAAK,CAACN,SAAN,CAAkB,KAAlB,CACD,CARO,CASRS,cAAc,CAAE,wBAAAH,KAAK,CAAI,CACvBA,KAAK,CAACP,OAAN,CAAgB,KAAhB,CACAO,KAAK,CAACN,SAAN,CAAkB,IAAlB,CACD,CAZO,CAHkB,CAAD,CAA7B,CAmBA;uBAC2DE,SAAS,CAACQ,O,CAAtDL,O,oBAAAA,O,CAASE,c,oBAAAA,c,CAAgBE,c,oBAAAA,c,CAExC;8CACA,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAL,KAAK,QAAIA,CAAAA,KAAK,CAACL,IAAV,EAA1B,CAEP;AACA,cAAeC,CAAAA,SAAS,CAACU,OAAzB,CAEA;AACA,MAAO,SAASC,CAAAA,SAAT,EAAqB,CAC1B,gGAAO,iBAAMC,QAAN,oIACLA,QAAQ,CAACT,OAAO,EAAR,CAAR,CADK,sCAIoBU,CAAAA,KAAK,CAAC,UAAD,CAJzB,QAIGC,QAJH,qCAKgBA,CAAAA,QAAQ,CAACC,IAAT,EALhB,QAKGC,IALH,eAOHJ,QAAQ,CAACP,cAAc,CAACW,IAAD,CAAf,CAAR,CAPG,iFASHJ,QAAQ,CAACL,cAAc,EAAf,CAAR,CATG,qEAAP,gEAYD","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  user: [],\r\n}\r\n\r\n// A slice for recipes with our three reducers\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    getUser: state => {\r\n      state.loading = true\r\n    },\r\n    getUserSuccess: (state, { payload }) => {\r\n      state.user = payload\r\n      state.loading = false\r\n      state.hasErrors = false\r\n    },\r\n    getUserFailure: state => {\r\n      state.loading = false\r\n      state.hasErrors = true\r\n    },\r\n  },\r\n})\r\n\r\n// Three actions generated from the slice\r\nexport const { getUser, getUserSuccess, getUserFailure } = userSlice.actions\r\n\r\n// A selector\r\nexport const userSelector = state => state.user\r\n\r\n// The reducer\r\nexport default userSlice.reducer\r\n\r\n// Asynchronous thunk action\r\nexport function fetchUser() {\r\n  return async dispatch => {\r\n    dispatch(getUser())\r\n\r\n    try {\r\n      const response = await fetch('/details')\r\n      const data = await response.json()\r\n\r\n      dispatch(getUserSuccess(data))\r\n    } catch (error) {\r\n      dispatch(getUserFailure())\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}