{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Abhishek\\\\Desktop\\\\production server with webpack redux HOC perfect\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var initialState={userinfo:[],error:\"\"};// function reducer(state = initialState, action) {\n//  if (action.type === \"DATA_LOADED\") {\n//     return Object.assign({}, state, {\n//       userinfo: state.userinfo.concat(action.data)\n//     });\n//   }\n//   if (action.type === \"ERROR\") {\n//     return Object.assign({}, state, {\n//       error: state.error.concat(action.msg)\n//     });\n//   }\n//   return state;\n// }\nvar reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:intialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"FetchData\":return _objectSpread(_objectSpread({},state),{},{userinfo:action.userinfo});case\"ERROR\":return _objectSpread(_objectSpread({},state),{},{error:action.msg});default:return state;}};export default reducer;","map":{"version":3,"sources":["C:/Users/Abhishek/Desktop/production server with webpack redux HOC perfect/src/reducers/index.js"],"names":["initialState","userinfo","error","reducer","state","intialState","action","type","msg"],"mappings":"yMAAA,GAAMA,CAAAA,YAAY,CAAG,CACrBC,QAAQ,CAAC,EADY,CAEpBC,KAAK,CAAC,EAFc,CAArB,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAiC,IAAhCC,CAAAA,KAAgC,2DAAxBC,WAAwB,IAAXC,CAAAA,MAAW,2CAE/C,OAAQA,MAAM,CAACC,IAAf,EACG,IAAK,WAAL,CACK,sCAAYH,KAAZ,MAAmBH,QAAQ,CAAEK,MAAM,CAACL,QAApC,GACJ,IAAK,OAAL,CACI,sCAAYG,KAAZ,MAAmBF,KAAK,CAAEI,MAAM,CAACE,GAAjC,GACJ,QACI,MAAOJ,CAAAA,KAAP,CANR,CASD,CAXD,CAcA,cAAeD,CAAAA,OAAf","sourcesContent":["const initialState = {\r\nuserinfo:[],\r\n error:\"\"\r\n}\r\n// function reducer(state = initialState, action) {\r\n//  if (action.type === \"DATA_LOADED\") {\r\n//     return Object.assign({}, state, {\r\n//       userinfo: state.userinfo.concat(action.data)\r\n//     });\r\n//   }\r\n//   if (action.type === \"ERROR\") {\r\n//     return Object.assign({}, state, {\r\n//       error: state.error.concat(action.msg)\r\n//     });\r\n//   }\r\n//   return state;\r\n// }\r\nconst reducer = (state = intialState, action) => {\r\n\r\n  switch (action.type) {\r\n     case \"FetchData\":\r\n          return { ...state, userinfo: action.userinfo }\r\n      case \"ERROR\":\r\n          return { ...state, error: action.msg }\r\n      default:\r\n          return state\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}